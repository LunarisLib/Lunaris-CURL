name: CMake action build example test

on:
#  push:
#    branches:
#      - master
  workflow_dispatch:

env:
  PROJECT_PATH: "./.examples/CMake"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] # [ windows-latest, ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup VCPKG
        id: vcpkg
        shell: bash
        run: |
          echo "Cloning vcpkg to ${{ runner.workspace }}/vcpkg"

          git clone https://github.com/microsoft/vcpkg.git ${{ runner.workspace }}/vcpkg
          
          echo "Good."
          
          echo "VCPKG_ROOT=\"${{ runner.workspace }}/vcpkg\"" >> $GITHUB_ENV
          echo "${{ runner.workspace }}/vcpkg" >> $GITHUB_PATH

          echo "Current GITHUB_PATH: $GITHUB_PATH"
          echo "Current PATH: $PATH"
          echo "Setup..."

          cd ${{ runner.workspace }}/vcpkg
          
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then

            ./bootstrap-vcpkg.sh -disableMetrics
            export PATH="${{ runner.workspace }}/vcpkg:$PATH"

          elif [ "${{ matrix.os }}" == "macos-latest" ]; then

            ./bootstrap-vcpkg.sh -disableMetrics
            export PATH="${{ runner.workspace }}/vcpkg:$PATH"

          elif [ "${{ matrix.os }}" == "windows-latest" ]; then

            ./bootstrap-vcpkg.bat -disableMetrics
            export PATH="${{ runner.workspace }}/vcpkg;$PATH"

          fi

          cd ${{ runner.workspace }}/${{ env.PROJECT_PATH }}
          ${{ runner.workspace }}/vcpkg/vcpkg install          
          cd ${{ runner.workspace }}

      - name: Build
        uses: LunarisLib/actions/CMake@master
        with:
          checkout: 'true'
          project_path: ${{ env.PROJECT_PATH }}
          artifact_name: ${{ matrix.os }}_PROJECT

      - name: Upload artifacts to see what's going on
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.os }}-artifact
          path: build
          include-hidden-files: 'true'